// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainingProject.Models;

#nullable disable

namespace TrainingProject.Migrations
{
    [DbContext(typeof(TrainingDatabaseContext))]
    [Migration("20240507133901_InsertExampleData")]
    partial class InsertExampleData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrainingProject.Models.Line", b =>
                {
                    b.Property<int>("LineId")
                        .HasColumnType("int")
                        .HasColumnName("lineId");

                    b.Property<string>("LineName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lineName");

                    b.HasKey("LineId")
                        .HasName("PK__Lines__32489DA535D4B69E");

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            LineId = 1,
                            LineName = "Packing"
                        },
                        new
                        {
                            LineId = 2,
                            LineName = "Machining"
                        },
                        new
                        {
                            LineId = 3,
                            LineName = "Assembly"
                        },
                        new
                        {
                            LineId = 4,
                            LineName = "Fabrication"
                        },
                        new
                        {
                            LineId = 5,
                            LineName = "Production"
                        });
                });

            modelBuilder.Entity("TrainingProject.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<string>("Batch")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("batch");

                    b.Property<int?>("LineId")
                        .HasColumnType("int")
                        .HasColumnName("lineId");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("PlannedDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("plannedDate");

                    b.Property<int?>("PlannedQuantity")
                        .HasColumnType("int")
                        .HasColumnName("plannedQuantity");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("StartingDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("startingDate");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("statusId");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("typeId");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.Property<string>("Wbs")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Wbs");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__0809335DECC5D2B3");

                    b.HasIndex("LineId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Batch = "BATCH001",
                            LineId = 1,
                            Name = "Order 1",
                            PlannedDate = "2024-04-10",
                            PlannedQuantity = 90,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 1,
                            Wbs = "WBS001"
                        },
                        new
                        {
                            OrderId = 2,
                            Batch = "BATCH002",
                            LineId = 2,
                            Name = "Order 2",
                            PlannedDate = "2024-04-12",
                            PlannedQuantity = 140,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 2,
                            Wbs = "WBS002"
                        },
                        new
                        {
                            OrderId = 3,
                            Batch = "BATCH003",
                            LineId = 3,
                            Name = "Order 3",
                            PlannedDate = "2024-04-15",
                            PlannedQuantity = 180,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 3,
                            Wbs = "WBS003"
                        },
                        new
                        {
                            OrderId = 4,
                            Batch = "BATCH004",
                            LineId = 4,
                            Name = "Order 4",
                            PlannedDate = "2024-04-18",
                            PlannedQuantity = 110,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 4,
                            Wbs = "WBS004"
                        },
                        new
                        {
                            OrderId = 5,
                            Batch = "BATCH005",
                            LineId = 1,
                            Name = "Order 5",
                            PlannedDate = "2024-04-20",
                            PlannedQuantity = 80,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 5,
                            Wbs = "WBS005"
                        },
                        new
                        {
                            OrderId = 6,
                            Batch = "BATCH006",
                            LineId = 2,
                            Name = "Order 6",
                            PlannedDate = "2024-04-22",
                            PlannedQuantity = 170,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 1,
                            Wbs = "WBS006"
                        },
                        new
                        {
                            OrderId = 7,
                            Batch = "BATCH007",
                            LineId = 3,
                            Name = "Order 7",
                            PlannedDate = "2024-04-25",
                            PlannedQuantity = 200,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 2,
                            Wbs = "WBS007"
                        },
                        new
                        {
                            OrderId = 8,
                            Batch = "BATCH008",
                            LineId = 4,
                            Name = "Order 8",
                            PlannedDate = "2024-04-28",
                            PlannedQuantity = 120,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 3,
                            Wbs = "WBS008"
                        },
                        new
                        {
                            OrderId = 9,
                            Batch = "BATCH009",
                            LineId = 5,
                            Name = "Order 9",
                            PlannedDate = "2024-05-01",
                            PlannedQuantity = 90,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 4,
                            Wbs = "WBS009"
                        },
                        new
                        {
                            OrderId = 10,
                            Batch = "BATCH010",
                            LineId = 1,
                            Name = "Order 10",
                            PlannedDate = "2024-05-03",
                            PlannedQuantity = 140,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 5,
                            Wbs = "WBS010"
                        },
                        new
                        {
                            OrderId = 11,
                            Batch = "BATCH011",
                            LineId = 2,
                            Name = "Order 11",
                            PlannedDate = "2024-05-06",
                            PlannedQuantity = 180,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 1,
                            Wbs = "WBS011"
                        },
                        new
                        {
                            OrderId = 12,
                            Batch = "BATCH012",
                            LineId = 3,
                            Name = "Order 12",
                            PlannedDate = "2024-05-09",
                            PlannedQuantity = 100,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 2,
                            Wbs = "WBS012"
                        },
                        new
                        {
                            OrderId = 13,
                            Batch = "BATCH013",
                            LineId = 4,
                            Name = "Order 13",
                            PlannedDate = "2024-05-12",
                            PlannedQuantity = 150,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 3,
                            Wbs = "WBS013"
                        },
                        new
                        {
                            OrderId = 14,
                            Batch = "BATCH014",
                            LineId = 5,
                            Name = "Order 14",
                            PlannedDate = "2024-05-15",
                            PlannedQuantity = 180,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 4,
                            Wbs = "WBS014"
                        },
                        new
                        {
                            OrderId = 15,
                            Batch = "BATCH015",
                            LineId = 1,
                            Name = "Order 15",
                            PlannedDate = "2024-05-18",
                            PlannedQuantity = 70,
                            Quantity = 0,
                            StatusId = 3,
                            TypeId = 5,
                            Wbs = "WBS015"
                        });
                });

            modelBuilder.Entity("TrainingProject.Models.OrderStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("statusId");

                    b.Property<string>("StatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("statusName");

                    b.HasKey("StatusId")
                        .HasName("PK__OrderSta__36257A18CCD15231");

                    b.ToTable("OrderStatus", (string)null);

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            StatusName = "Open"
                        },
                        new
                        {
                            StatusId = 2,
                            StatusName = "Closed"
                        },
                        new
                        {
                            StatusId = 3,
                            StatusName = "Planned"
                        },
                        new
                        {
                            StatusId = 4,
                            StatusName = "Paused"
                        });
                });

            modelBuilder.Entity("TrainingProject.Models.Type", b =>
                {
                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("typeId");

                    b.Property<string>("TypeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("typeName");

                    b.HasKey("TypeId")
                        .HasName("PK__Types__F04DF13AE3DA98D7");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            TypeId = 1,
                            TypeName = "PR001"
                        },
                        new
                        {
                            TypeId = 2,
                            TypeName = "PR002"
                        },
                        new
                        {
                            TypeId = 3,
                            TypeName = "PR003"
                        },
                        new
                        {
                            TypeId = 4,
                            TypeName = "PR004"
                        },
                        new
                        {
                            TypeId = 5,
                            TypeName = "PR005"
                        });
                });

            modelBuilder.Entity("TrainingProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("userName");

                    b.HasKey("UserId")
                        .HasName("PK__Users__CB9A1CFF58412903");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserName = "User1"
                        },
                        new
                        {
                            UserId = 2,
                            UserName = "User2"
                        },
                        new
                        {
                            UserId = 3,
                            UserName = "User3"
                        });
                });

            modelBuilder.Entity("TrainingProject.Models.Order", b =>
                {
                    b.HasOne("TrainingProject.Models.Line", "Line")
                        .WithMany("Orders")
                        .HasForeignKey("LineId")
                        .HasConstraintName("FK__Orders__lineId__5070F446");

                    b.HasOne("TrainingProject.Models.OrderStatus", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK__Orders__statusId__52593CB8");

                    b.HasOne("TrainingProject.Models.Type", "Type")
                        .WithMany("Orders")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK__Orders__typeId__4F7CD00D");

                    b.HasOne("TrainingProject.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Orders__userId__5165187F");

                    b.Navigation("Line");

                    b.Navigation("Status");

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrainingProject.Models.Line", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TrainingProject.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TrainingProject.Models.Type", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TrainingProject.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
