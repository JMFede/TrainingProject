apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: jmfede/angular-app:v4
        ports:
        - containerPort: 4200
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: LoadBalancer  # Expose the service outside the cluster
  ports:
    - port: 80  # Port exposed by the service
      protocol: TCP
      targetPort: 4200  # Port your application listens on
  selector:
    app: frontend  # Label selector to match pods
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: jmfede/dotnet-api:v2
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: backend
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sql-database
spec:
  serviceName: sql-database
  replicas: 1
  selector:
    matchLabels:
      app: sql-database
  template:
    metadata:
      labels:
        app: sql-database
    spec:
      containers:
        - name: sql-database
          image: jmfede/sql-db:v1
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: yourStrong(!)Password
          ports:
            - containerPort: 1433
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
  apiVersion: v1
    kind: Service
    metadata:
      name: mysql
    spec:
      selector:
        app: sql-database
      ports:
        - protocol: TCP
          port: 3306
          targetPort: 3306





